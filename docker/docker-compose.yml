version: '3.8'
services:
  kangaroo-nacos:
    container_name: kangaroo-nacos
    image: nacos/nacos-server
    build:
      context: ./nacos
    environment:
      - MODE=standalone
    volumes:
      - ./nacos/logs/:/home/nacos/logs
      - ./nacos/conf/application.properties:/home/nacos/conf/application.properties
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    depends_on:
      - kangaroo-mysql
  kangaroo-mysql:
    container_name: kangaroo-mysql
    image: mysql:5.7
    build:
      context: ./mysql
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/conf:/etc/mysql/conf.d
      - ./mysql/logs:/logs
      - ./mysql/data:/var/lib/mysql
    command: [
        'mysqld',
        '--innodb-buffer-pool-size=80M',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci',
        '--default-time-zone=+8:00',
        '--lower-case-table-names=1'
    ]
    environment:
      MYSQL_DATABASE: 'kangaroo-cloud'
      MYSQL_ROOT_PASSWORD: password
  kangaroo-redis:
    container_name: kangaroo-redis
    image: redis
    build:
      context: ./redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis/conf/redis.conf:/home/kangaroo/redis/redis.conf
      - ./redis/data:/data
    command:
      - redis-server
      - /home/kangaroo/redis/redis.conf
  kangaroo-nginx:
    container_name: kangaroo-nginx
    image: nginx
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/html/dist:/home/kangaroo/projects/kangaroo-ui
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/var/log/nginx
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - kangaroo-gateway
    links:
      - kangaroo-gateway
  kangaroo-gateway:
    container_name: kangaroo-gateway
    build:
      context: ./kangaroo/gateway
      dockerfile: dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - kangaroo-redis
    links:
      - kangaroo-redis
  kangaroo-modules-job:
    container_name: kangaroo-modules-job
    build:
      context: ./kangaroo/modules/job
      dockerfile: dockerfile
    ports:
    - "9204:9204"
    depends_on:
      - kangaroo-mysql
    links:
      - kangaroo-mysql
  kangaroo-modules-system:
    container_name: kangaroo-modules-system
    build:
      context: ./kangaroo/modules/system
      dockerfile: dockerfile
    ports:
    - "9201:9201"
    depends_on:
      - kangaroo-mysql
    links:
      - kangaroo-mysql
  es01:
    build:
      context: ./elasticsearch/
      args:
        ELK_VERSION: 7.5.1
    container_name: es01
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: data01
        target: /usr/share/elasticsearch/data
    ports:
      - 9200:9200
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - node.master=true
      - node.data=true
      - http.port=9200
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elastic
  es02:
    build:
      context: ./elasticsearch/
      args:
        ELK_VERSION: 7.5.1
    container_name: es02
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: data02
        target: /usr/share/elasticsearch/data
    ports:
      - 9201:9201
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - node.master=true
      - node.data=true
      - http.port=9201
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elastic
  es03:
    build:
      context: ./elasticsearch/
      args:
        ELK_VERSION: 7.5.1
    container_name: es03
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: data03
        target: /usr/share/elasticsearch/data
    ports:
      - 9202:9202
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - node.master=true
      - node.data=true
      - http.port=9202
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elastic

volumes:
  data01:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./elasticsearch/data1

  data02:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./elasticsearch/data2

  data03:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./elasticsearch/data3

networks:
  elastic:
    driver: bridge