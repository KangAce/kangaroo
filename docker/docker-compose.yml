version: '3.8'
services:
  kangaroo-minio:
    container_name: kangaroo-minio
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=kangaroo
      - MINIO_ROOT_PASSWORD=kangaroo.ink
    volumes:
      - /data/nfs/kangaroo/minio/data:/data
      - /data/nfs/kangaroo/minio/config:/root/.minio
    ports:
      - "9000:9000"
      - "9898:9898"
    command: [ 'server', '-console-address=:9898', '/data' ]

  kangaroo-nacos:
    container_name: kangaroo-nacos
    image: nacos/nacos-server
    build:
      context: ./nacos
    environment:
      - MODE=standalone
    volumes:
      - /data/nfs/kangaroo/nacos/logs/:/home/nacos/logs
      - /data/nfs/kangaroo/nacos/conf/application.properties:/home/nacos/conf/application.properties
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    depends_on:
      - kangaroo-mysql
    networks:
      - kangaroo-net
  kangaroo-mysql:
    container_name: kangaroo-mysql
    image: mysql:5.7
    build:
      context: ./mysql
      dockerfile: Dockerfile
    ports:
      - "3306:3306"
    volumes:
      - /data/nfs/kangaroo/mysql/conf:/etc/mysql/conf.d
      - /data/nfs/kangaroo/mysql/logs:/var/logs
      - /data/nfs/kangaroo/mysql/data:/var/lib/mysql
    command:
      [
        'mysqld',
        '--innodb-buffer-pool-size=80M',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci',
        '--default-time-zone=+8:00',
        '--lower-case-table-names=1'
      ]
    environment:
      MYSQL_DATABASE: 'kangaroo-cloud'
      MYSQL_ROOT_PASSWORD: password
    networks:
      - kangaroo-net
  kangaroo-jenkins:
    container_name: kangaroo-jenkins
    image: jenkins/jenkins:lts
    restart: always
    user: root
    privileged: true
    ports:
      - 8888:8080
      - 50001:50000
    environment:
      TZ: Asia/Shanghai
    volumes:
      - /opt/jenkins/data:/var/jenkins_home
      - /etc/sysconfig/docker:/etc/sysconfig/docker
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
  kangaroo-redis:
    container_name: kangaroo-redis
    image: redis
    build:
      context: ./redis
    ports:
      - "6379:6379"
    volumes:
      - /data/nfs/kangaroo/redis/conf/redis.conf:/home/kangaroo/redis/redis.conf
      - /data/nfs/kangaroo/redis/data:/home/kangaroo/redis/data
    command: redis-server /home/kangaroo/redis/redis.conf
    networks:
      - kangaroo-net
  kangaroo-nginx:
    container_name: kangaroo-nginx
    image: nginx
    #    build:
    #      context: ./nginx
    #      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - /data/nfs/kangaroo/nginx/html/dist:/home/kangaroo/projects/kangaroo-ui
      - /data/nfs/kangaroo/nginx:/etc/nginx
      - /data/nfs/kangaroo/nginx/logs:/var/log/nginx
    depends_on:
      - kangaroo-gateway
    networks:
      - kangaroo-net
  kangaroo-gateway:
    container_name: kangaroo-gateway
    build:
      context: ./kangaroo/gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - kangaroo-redis
    networks:
      - kangaroo-net
  kangaroo-modules-captcha:
    container_name: kangaroo-modules-captcha
    build:
      context: ./kangaroo/modules/captcha
      dockerfile: Dockerfile
    ports:
      - "9911:9911"
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      - kangaroo-net
  kangaroo-modules-job:
    container_name: kangaroo-modules-job
    build:
      context: ./kangaroo/modules/job
      dockerfile: Dockerfile
    ports:
      - "9907:9907"
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      - kangaroo-net
  kangaroo-modules-file:
    container_name: kangaroo-modules-file
    build:
      context: ./kangaroo/modules/file
      dockerfile: Dockerfile
    ports:
      - "9905:9905"
    deploy:
      resources:
        limits:
          memory: 500M
    volumes:
      - /kangaroo/file/uploadPath:/home/kangaroo/uploadPath
    networks:
      - kangaroo-net
  kangaroo-modules-gen:
    container_name: kangaroo-modules-gen
    build:
      context: ./kangaroo/modules/gen
      dockerfile: Dockerfile
    ports:
      - "9913:9913"
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      - kangaroo-net
  kangaroo-modules-douyin:
    container_name: kangaroo-modules-douyin
    build:
      context: ./kangaroo/modules/douyin
      dockerfile: Dockerfile
    ports:
      - "9909:9909"
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      - kangaroo-net
  kangaroo-modules-mail:
    container_name: kangaroo-modules-mail
    build:
      context: ./kangaroo/modules/mail
      dockerfile: Dockerfile
    ports:
      - "9903:9903"
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      - kangaroo-net
  kangaroo-modules-system:
    container_name: kangaroo-modules-system
    build:
      context: ./kangaroo/modules/system
      dockerfile: Dockerfile
    ports:
      - "9901:9901"
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      - kangaroo-net
  kangaroo-modules-wx:
    container_name: kangaroo-modules-wx
    build:
      context: ./kangaroo/modules/wx
      dockerfile: Dockerfile
    ports:
      - "9915:9915"
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      - kangaroo-net
  es01:
    build:
      context: ./elasticsearch/
      args:
        ELK_VERSION: 7.5.1
    container_name: es01
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: data01
        target: /usr/share/elasticsearch/data
    ports:
      - 9200:9200
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - node.master=true
      - node.data=true
      - http.port=9200
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elastic
  es02:
    build:
      context: ./elasticsearch/
      args:
        ELK_VERSION: 7.5.1
    container_name: es02
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: data02
        target: /usr/share/elasticsearch/data
    ports:
      - 9201:9201
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - node.master=true
      - node.data=true
      - http.port=9201
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elastic
  es03:
    build:
      context: ./elasticsearch/
      args:
        ELK_VERSION: 7.5.1
    container_name: es03
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: data03
        target: /usr/share/elasticsearch/data
    ports:
      - 9202:9202
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - node.master=true
      - node.data=true
      - http.port=9202
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elastic
  kangaroo-rmqnamesrv:
    image: foxiswho/rocketmq:server
    container_name: kangaroo-rmqnamesrv
    ports:
      - 9876:9876
    volumes:
      - /kangaroo/rocketmq/logs:/opt/logs
      - /kangaroo/rocketmq/store:/opt/store
    networks:
      kangaroo-net:
        aliases:
          - kangaroo-rmqnamesrv

  kangaroo-rmqbroker:
    image: foxiswho/rocketmq:broker
    container_name: kangaroo-rmqbroker
    ports:
      - 10909:10909
      - 10911:10911
    volumes:
      - /kangaroo/rocketmq/logs:/opt/logs
      - /kangaroo/rocketmq/store:/opt/store
      - /kangaroo/rocketmq/conf/broker.conf:/etc/rocketmq/broker.conf
    environment:
      NAMESRV_ADDR: "kangaroo-rmqnamesrv:9876"
      JAVA_OPTS: " -Duser.home=/opt"
      JAVA_OPT_EXT: "-server -Xms128m -Xmx128m -Xmn128m"
    command: mqbroker -c /etc/rocketmq/broker.conf
    depends_on:
      - kangaroo-rmqnamesrv
    networks:
      kangaroo-net:
        aliases:
          - kangaroo-rmqbroker
  kangaroo-rmqconsole:
    image: styletang/rocketmq-console-ng
    container_name: kangaroo-rmqconsole
    ports:
      - 9090:8080
    environment:
      JAVA_OPTS: "-Drocketmq.namesrv.addr=kangaroo-rmqnamesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false"
    depends_on:
      - kangaroo-rmqnamesrv
    networks:
      kangaroo-net:
        aliases:
          - kangaroo-rmqconsole

volumes:
  data01:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./elasticsearch/data1

  data02:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./elasticsearch/data2

  data03:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./elasticsearch/data3

networks:
  elastic:
    driver: bridge
  kangaroo-net:
    name: kangaroo-net
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/24
          gateway: 192.168.0.1
    enable_ipv6: false
    internal: false
    attachable: false
